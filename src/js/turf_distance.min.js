(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function toRad(a){return a*Math.PI/180}var invariant=require("turf-invariant");module.exports=function(a,t,e){invariant.featureOf(a,"Point","distance"),invariant.featureOf(t,"Point","distance");var r,n=a.geometry.coordinates,i=t.geometry.coordinates,o=toRad(i[1]-n[1]),s=toRad(i[0]-n[0]),c=toRad(n[1]),d=toRad(i[1]),h=Math.sin(o/2)*Math.sin(o/2)+Math.sin(s/2)*Math.sin(s/2)*Math.cos(c)*Math.cos(d),u=2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h));switch(e){case"miles":r=3960;break;case"kilometers":r=6373;break;case"degrees":r=57.2957795;break;case"radians":r=1;break;case void 0:r=6373;break;default:throw new Error('unknown option given to "units"')}var M=r*u;return M};

},{"turf-invariant":2}],2:[function(require,module,exports){
function geojsonType(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function featureOf(e,r,t){if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function collectionOf(e,r,t){if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}module.exports.geojsonType=geojsonType,module.exports.collectionOf=collectionOf,module.exports.featureOf=featureOf;

},{}],3:[function(require,module,exports){
module.exports={distance:require("turf-distance")};
},{"turf-distance":1}]},{},[3])(3)
});