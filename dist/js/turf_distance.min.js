<<<<<<< HEAD
/*! ischool 12-04-2016 */
=======
/*! ischool 11-04-2016 */
>>>>>>> 49957a537fc97b5f12a9d08a07944f360c05a87f
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.turf=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){function d(a){return a*Math.PI/180}var e=a("turf-invariant");b.exports=function(a,b,c){e.featureOf(a,"Point","distance"),e.featureOf(b,"Point","distance");var f,g=a.geometry.coordinates,h=b.geometry.coordinates,i=d(h[1]-g[1]),j=d(h[0]-g[0]),k=d(g[1]),l=d(h[1]),m=Math.sin(i/2)*Math.sin(i/2)+Math.sin(j/2)*Math.sin(j/2)*Math.cos(k)*Math.cos(l),n=2*Math.atan2(Math.sqrt(m),Math.sqrt(1-m));switch(c){case"miles":f=3960;break;case"kilometers":f=6373;break;case"degrees":f=57.2957795;break;case"radians":f=1;break;case void 0:f=6373;break;default:throw new Error('unknown option given to "units"')}var o=f*n;return o}},{"turf-invariant":2}],2:[function(a,b,c){function d(a,b,c){if(!b||!c)throw new Error("type and name required");if(!a||a.type!==b)throw new Error("Invalid input to "+c+": must be a "+b+", given "+a.type)}function e(a,b,c){if(!c)throw new Error(".featureOf() requires a name");if(!a||"Feature"!==a.type||!a.geometry)throw new Error("Invalid input to "+c+", Feature with geometry required");if(!a.geometry||a.geometry.type!==b)throw new Error("Invalid input to "+c+": must be a "+b+", given "+a.geometry.type)}function f(a,b,c){if(!c)throw new Error(".collectionOf() requires a name");if(!a||"FeatureCollection"!==a.type)throw new Error("Invalid input to "+c+", FeatureCollection required");for(var d=0;d<a.features.length;d++){var e=a.features[d];if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+c+", Feature with geometry required");if(!e.geometry||e.geometry.type!==b)throw new Error("Invalid input to "+c+": must be a "+b+", given "+e.geometry.type)}}b.exports.geojsonType=d,b.exports.collectionOf=f,b.exports.featureOf=e},{}],3:[function(a,b,c){b.exports={distance:a("turf-distance")}},{"turf-distance":1}]},{},[3])(3)});